Part A:
My max int = 2147483647
The int.MaxValue command says = 2147483647
My min int = -2147483648
The int.MinValue command says = -2147483648

Part B:
The machine epsilon with double is = 2.22044604925031E-16
The machine epsilon with float is = 1.192093E-07
Dmitri says the machine epsilon for doubles should be around = 2.22044604925031E-16
Dmitri says the machine epsilon for floats should be around = 1.19209289550781E-07

Part C:
The sum going up using floats becomes = 15.40368
The sum going down using floats becomes = 18.80792

Small numbers added to small numbers have smaller roundoff errors than large numbers added to small numbers. The sum going from smallest to largest should thus be the most precise one.

The sums will converge as a function of max, since at some point we are adding numbers smaller than the machine epsilon, which will just be zeros for the computer.

The sum going up using doubles becomes = 20.9661659719623
The sum going down using doubles becomes = 20.9661659733582

Part D:
If two values are within 1e-9 of each other, the approx function will return true.
The truth value for 1.01 ~ 1 is False
The truth value for 1.999999999 ~ 2 is True
