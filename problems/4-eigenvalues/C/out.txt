
Create a matrix and diagonalize it via the cyclic, value-by-value and classic method.

Setting up a random symmetric matrix:

     0.998     -0.118      0.415      0.139     0.0331 
    -0.118      0.207       1.75      0.481       1.47 
     0.415       1.75      -1.08       1.22     -0.162 
     0.139      0.481       1.22      -0.94      -1.01 
    0.0331       1.47     -0.162      -1.01       1.48 

The cyclic method used 50 operations
The value-by-value method used 123 operations
The classic method used 26 operations

After cyclic diagonalization the matrix looks like:

     0.998   7.84e-11  -4.22e-14  -1.12e-17          0 
    -0.118      0.207   8.73e-15   7.59e-22  -8.29e-09 
     0.415       1.75      -1.08          0   8.85e-12 
     0.139      0.481       1.22      -0.94   4.29e-13 
    0.0331       1.47     -0.162      -1.01       1.48 

After value-by-value diagonalization the matrix looks like:

     0.998  -1.77e-09  -6.87e-09          0   1.45e-08 
    -0.118      0.207   1.96e-09   1.68e-09          0 
     0.415       1.75      -1.08          0  -8.65e-09 
     0.139      0.481       1.22      -0.94          0 
    0.0331       1.47     -0.162      -1.01       1.48 

After classic Jacobi diagonalization the matrix looks like:

     0.998   2.18e-09  -6.87e-19  -2.13e-11   2.83e-20 
    -0.118      0.207  -1.73e-16  -1.97e-14  -1.89e-09 
     0.415       1.75      -1.08          0   3.57e-13 
     0.139      0.481       1.22      -0.94   7.47e-18 
    0.0331       1.47     -0.162      -1.01       1.48 


The found eigenvalues are:
E(cyclic)		E(val_by_val)		E(classic)
-2.73520648114956	-2.73520648114956	-2.73520648114956
-1.86582831741965	-1.86582831741965	-1.86582831741965
0.941355264818574	0.941355264818574	0.941355264818573
1.64395395106754	1.64395395106755	1.64395395106754
2.68482839611187	2.68482839611187	2.68482839611188
